blueprint:
  name: Ikea SYMFONISK remote for media player
  description: >
      Blueprint to configure the Ikea SYMFONIKS gen2 zigbee remote to control a media player. 
      Beside all media functions to control the media player the 2 dot buttons have actions voor single press, double press and long press.
  domain: automation
  input:
    remote:
      name: Remote
      description: The remote control.
      selector:
        device:
          integration: zha
          model: SYMFONISK sound remote gen2
          multiple: false
    player:
      name: Media player
      description: Media player to be controlled by this remote
      selector:
        entity:
          filter:
            - domain: 
              - media_player
          multiple: false
    action_1_sp:
      name: Button • single press
      description: Action for single press of • 
      default: {}
      selector:
        action: {}
    action_1_dp:
      name: Button • double press
      description: Action for double press of • 
      default: {}
      selector:
        action: {}
    action_1_lp:
      name: Button • long press
      description: Action for long press of • 
      default: {}
      selector:
        action: {}
    action_2_sp:
      name: Button •• single press
      description: Action for single press of •• 
      default: {}
      selector:
        action: {}
    action_2_dp:
      name: Button •• double press
      description: Action for double press of •• 
      default: {}
      selector:
        action: {}
    action_2_lp:
      name: Button •• long press
      description: Action for long press of •• 
      default: {}
      selector:
        action: {}
triggers:
  - event_type: zha_event
    event_data:
      device_id: !input remote
    trigger: event
conditions: []
actions:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.cluster_id == 8 }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.params.move_mode == 0 }}"
                sequence:
                  - action: media_player.volume_up
                    data: {}
                    target:
                      entity_id: !input player
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.params.move_mode == 1 }}"
                sequence:
                  - action: media_player.volume_down
                    data: {}
                    target:
                      entity_id: !input player
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.params.step_mode == 0 }}"
                sequence:
                  - action: media_player.media_next_track
                    target:
                      entity_id: !input player
                    data: {}
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.params.step_mode == 1 }}"
                sequence:
                  - action: media_player.media_previous_track
                    target:
                      entity_id: !input player
                    data: {}
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.cluster_id == 6 }}"
        sequence:
          - action: media_player.media_play_pause
            target:
              entity_id: !input player
            data: {}
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.endpoint_id == 2 }}"
        sequence:
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'short_release' }}"
            sequence: !input action_1_sp
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'multi_press_complete' }}"
            sequence: !input action_1_dp
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'long_press' }}"
            sequence: !input action_1_lp
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.endpoint_id == 3 }}"
        sequence:
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'short_release' }}"
            sequence: !input action_2_sp
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'multi_press_complete' }}"
            sequence: !input action_2_dp
          - conditions: 
            - condition: template
              value_template: "{{ trigger.event.data.command == 'long_press' }}"
            sequence: !input action_2_lp
              
            
mode: single
